!function () { "use strict"; const e = document.getElementById("search-input"), t = document.getElementById("results-container"), n = document.getElementById("loader"); let i; async function o(o) { n.style.display = "block", t.innerHTML = ""; try { const n = await fetch(`https://itunes.apple.com/search?term=${encodeURIComponent(o)}&entity=song&limit=20`); if (!n.ok) throw new Error(`HTTP greška! Status: ${n.status}`); const i = await n.json(); n.style.display = "none", a(i.results) } catch (o) { n.style.display = "none", t.innerHTML = `<div class="error-message"><p>Došlo je do greške prilikom pretrage: ${o.message}</p><p>Pokušajte ponovno kasnije.</p></div>` } } function a(e) { if (!e || 0 === e.length) t.innerHTML = `<div class="no-results"><p>Nema rezultata za vaš upit.</p><p>Pokušajte s drugim pojmom za pretragu.</p></div>`; else { let n = ""; e.forEach(e => { n += `<div class="result-item"><img src="${e.artworkUrl100 || "https://via.placeholder.com/100"}" alt="Album art" class="album-art"><div class="track-info"><div class="track-name">${e.trackName || "Nepoznata pjesma"}</div><div class="artist-name">${e.artistName || "Nepoznati izvođač"}</div></div></div>` }), t.innerHTML = n } } e.addEventListener("input", function () { const a = this.value.trim(); clearTimeout(i), "" === a ? t.innerHTML = `<div class="no-results"><p>Unesite pojam za pretragu kako biste vidjeli rezultate.</p></div>` : i = setTimeout(() => { o(a) }, 500) }), document.addEventListener("DOMContentLoaded", function () { t.innerHTML = `<div class="no-results"><p>Unesite pojam za pretragu kako biste vidjeli rezultate.</p></div>` }) }();